apiVersion: v1
kind: Namespace
metadata:
  name: scfm-prod
  labels:
    name: scfm-prod
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: scfm-app-configmap
  namespace: scfm-prod
data:
  HOST: "scfm-db-service"
  DATABASE: "scfm-db"
---
apiVersion: v1
kind: Secret
metadata:
  name: scfm-app-secret
  namespace: scfm-prod
type: Opaque
data:
  USER: "c2NmbS1kYi11c2Vy"
  PASSWORD: "bW90ZGVwYXNzZXRyZXNjb21wbGlxdWUK"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: scfm-db-configmap
  namespace: scfm-prod
data:
  MYSQL_DATABASE: "scfm-db"
---
apiVersion: v1
kind: Secret
metadata:
  name: scfm-db-secret
  namespace: scfm-prod
type: Opaque
data:
  MYSQL_USER: "c2NmbS1kYi11c2Vy"
  MYSQL_PASSWORD: "bW90ZGVwYXNzZXRyZXNjb21wbGlxdWUK"
  MYSQL_ROOT_PASSWORD: "bW90ZGVwYXNzZXRyZXNjb21wbGlxdWVkZWx1dGlsaXNhdGV1cnJvb3QK"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scfm-app-deployment
  namespace: scfm-prod
  labels:
    app: scfm-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: scfm-app
  template:
    metadata:
      labels:
        app: scfm-app
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: scfm-app-container
          image: "ghcr.io/lilwengo/shop_conta_minecraft:1.0.0"
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: scfm-app-configmap
          env:
            - name: USER
              valueFrom:
                secretKeyRef:
                  name: scfm-app-secret
                  key: USER
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: scfm-app-secret
                  key: PASSWORD
          ports:
            - containerPort: 80
          resources:
            requests:
              cpu: "128m"
              memory: "256Mi"
            limits:
              cpu: "256m"
              memory: "512Mi"
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 60
---
apiVersion: v1
kind: Service
metadata:
  name: scfm-app-service
  namespace: scfm-prod
  labels:
    app: scfm-app
spec:
  type: ClusterIP
  selector:
    app: scfm-app
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scfm-db-deployment
  namespace: scfm-prod
  labels:
    app: scfm-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: scfm-db
  template:
    metadata:
      labels:
        app: scfm-db
    spec:
      terminationGracePeriodSeconds: 10
      volumes:
        - name: scfm-db-volume
          persistentVolumeClaim:
            claimName: scfm-db-claim
      containers:
        - name: scfm-db-container
          image: "mysql:8.2"
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: scfm-db-configmap
          env:
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: scfm-db-secret
                  key: MYSQL_USER
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: scfm-db-secret
                  key: MYSQL_PASSWORD
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: scfm-db-secret
                  key: MYSQL_ROOT_PASSWORD
          volumeMounts:
            - name: scfm-db-volume
              mountPath: /var/lib/mysql
          ports:
            - containerPort: 3306
          resources:
            requests:
              cpu: "128m"
              memory: "256Mi"
            limits:
              cpu: "256m"
              memory: "512Mi"
          livenessProbe:
            tcpSocket:
              port: 3306
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 60
---
apiVersion: v1
kind: Service
metadata:
  name: scfm-db-service
  namespace: scfm-prod
  labels:
    app: scfm-db
spec:
  type: ClusterIP
  selector:
    app: scfm-db
  ports:
    - name: http
      port: 3306
      protocol: TCP
      targetPort: 3306
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: scfm-db-volume
  namespace: scfm-prod
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 100Mi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/var/local/scfm-db-volume"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: scfm-db-claim
  namespace: scfm-prod
  labels:
    app: scfm-db
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Mi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: scfm-app-ingress
  namespace: scfm-prod
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: scfm-app-service
                port:
                  number: 8080